<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cni on KUBEDGE&#39;s Blog</title>
    <link>/tags/cni/</link>
    <description>Recent content in cni on KUBEDGE&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/cni/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DPDK &amp; FD.io</title>
      <link>/nfv/golang/children/dpdk/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/golang/children/dpdk/</guid>
      <description>&lt;p&gt;DPDK and FD.io are providing some kind of support for ARM.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GOLANG</title>
      <link>/nfv/golang/children/golang/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/golang/children/golang/</guid>
      <description>&lt;p&gt;GOLANG based Networking libraries usable in micro services in docker container to simulate VNF.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux Bridging</title>
      <link>/nfv/ovs/children/linux_bridging/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/ovs/children/linux_bridging/</guid>
      <description>&lt;p&gt;The first goal is to replace the NAT+DHCP on the worker nodes
by Linux Bridging setup. All the devices connecting to the
cluser (Wifi AP, Bluetooth or derectly through the internal
switch would will be in the same IP network).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OVS</title>
      <link>/nfv/ovs/children/ovs/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/ovs/children/ovs/</guid>
      <description>&lt;p&gt;The second goal is to replace Linux Bridging with OVS.
The setup will also use VLAN tagging on eth0 to seggrate kubernetes/pod traffic from &amp;ldquo;tenant/5g traffic.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenDayLight</title>
      <link>/nfv/ovs/children/odl/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/ovs/children/odl/</guid>
      <description>&lt;p&gt;The third is to implement SDN/Network Slicing using ODL and controlling OVS&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rebuild Calico for ARM32V7</title>
      <link>/nfv/golang/children/calico/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/golang/children/calico/</guid>
      <description>&lt;p&gt;Neither calico nor canal seems to be available for usage yet on ARM32V7 for PI.
The attempt here is to cross-compile the calico containers and use them on the PI cluster.
Since calico&amp;rsquo;s role is mainly to setup ip table to get Kubernetes POD-POD communication established,
the likelyhood of being able to reuse some of calico go for a VNF are really slim.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy Flannel in PI Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</guid>
      <description>&lt;p&gt;In order to get the nodes and pods interface with each other accross the cluster.
This post describes how I deployed Flannel acounting with the fact that some of the
nodes have multiple interfaces (wlan0 and eth0).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>