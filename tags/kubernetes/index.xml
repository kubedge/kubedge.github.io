<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on KUBEDGE&#39;s Blog</title>
    <link>/tags/kubernetes/</link>
    <description>Recent content in kubernetes on KUBEDGE&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Kubernetes Dashboard</title>
      <link>/pi_cluster/applications/children/kubernetes_dashboard/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/applications/children/kubernetes_dashboard/</guid>
      <description>&lt;p&gt;Install Kubernetes Dashboard on the PI Cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a Raspberry 3 B&#43; Kubernetes Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-03-a/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-03-a/</guid>
      <description>&lt;p&gt;Also GCE is perfect to learn Kubernetes, building Kubernetes on top of PI Cluster brings another dimension to the learning,
from setting up the OS, partitionning the OS, DHCP, NAT, cross compiling for the ARM32V7.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Grafana</title>
      <link>/pi_cluster/applications/children/grafana/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/applications/children/grafana/</guid>
      <description>&lt;p&gt;Install Grafana on the PI Cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deply Helm and Tiller on PI Cluster</title>
      <link>/pi_cluster/maintenance/children/2018-07-13-a/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-07-13-a/</guid>
      <description>&lt;p&gt;The main purpose of this exercise is to be able to use Helm on the Rapsberry PI Cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use github repo as helm chart repository</title>
      <link>/pi_cluster/maintenance/children/2018-07-11-a/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-07-11-a/</guid>
      <description>&lt;p&gt;In order to be able use Helm charts the &amp;ldquo;normal&amp;rdquo; way, it is need to buid your own helm repository.
The goal of this post is to transform a github repo into a helm repo.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Persistency Volume to PI Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-08-a/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-08-a/</guid>
      <description>&lt;p&gt;In order to install OpenHAB, HomeAssistent or even promoteheus using Kubernetes, we need to first create Persistency Volumes&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy Flannel in PI Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</guid>
      <description>&lt;p&gt;In order to get the nodes and pods interface with each other accross the cluster.
This post describes how I deployed Flannel acounting with the fact that some of the
nodes have multiple interfaces (wlan0 and eth0).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Upgrade RPI Kubernetes cluster to 1.12</title>
      <link>/pi_cluster/maintenance/children/2018-09-28-a/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-09-28-a/</guid>
      <description>&lt;p&gt;The new Kubernetes 1.12 is out. THe goal is to update my two clusters to 1.12
using kubeadm 1.12&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Kubedge Kubeplay</title>
      <link>/pi_cluster/applications/children/kubesim_kubeplay/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/applications/children/kubesim_kubeplay/</guid>
      <description>&lt;p&gt;Install simplistic Kubeplay Application on the PI Cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Raspberry PI node to Kubernetes Cluster in 10 min</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-06-19-a/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-06-19-a/</guid>
      <description>&lt;p&gt;During some of the manipulation of the partition table of
my SD card, I ended up screwing up both my SD card and my backup Win32DiskImage backup.
Moreover if your SD card is 32G, it takes around 30 minute to restore from backup.
Hence the idea to come up with a way to build more resiliency in the cluster.
Recreating a node from scratch should not take more than 10 mn. The propose procedure
is still rather long because I did not push enough yet what the HypriotOS team, aka
build a default SD image where cloud-init does 100% of the initialization work.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Kubedge Blinkt</title>
      <link>/pi_cluster/applications/children/kubesim_blinkt/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/applications/children/kubesim_blinkt/</guid>
      <description>&lt;p&gt;Install Kubedge Blinkt Application on the PI Cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update Kubernetes to 1.11 on Ubuntu</title>
      <link>/pi_cluster/advanced/children/2018-06-30-a/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-06-30-a/</guid>
      <description>&lt;p&gt;Kubeadm is coming with an upgrade option. The goal of this study is to leverage the option.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile and Test SONOBUOY</title>
      <link>/pi_cluster/maintenance/children/2018-07-02-a/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-07-02-a/</guid>
      <description>&lt;p&gt;Sonobouy, deploys in a Kubernetes cluster and helps to assesse the compliance of that cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes test-infra</title>
      <link>/pi_cluster/advanced/children/2018-07-30-a/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-30-a/</guid>
      <description>&lt;p&gt;test-infra seems to somewhat overlap with sonobuoy features. The purpose of this post is
to fetch the code, compile and deploy it on a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Hashicorp Vault</title>
      <link>/pi_cluster/advanced/children/2018-08-01-a/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-08-01-a/</guid>
      <description>&lt;p&gt;Vault is aiming at improving security of the containers by rotating token and credential
much more often than usual. Looks like it is especially effectiv to help rotate passwords
used to access internal databases.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Istio</title>
      <link>/pi_cluster/advanced/children/2018-07-31-a/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-31-a/</guid>
      <description>&lt;p&gt;Istio is aiming at improving security of the containers. One of the key aspects
is the end to end encryption of the commnucation, the role of citadel to ensure the
management of the certificates, the renewal of the certificates.
As always, the goal of this post is to study that new tool and figure out I can
leverage it in my day to day work.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Kustomize</title>
      <link>/pi_cluster/advanced/children/2018-07-29-a/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-29-a/</guid>
      <description>&lt;p&gt;kustomize seems to help the setup of multiple clusters by removing copy paste accross cluster
and still keeping the configuration file has plain yaml instead of the template like it
is often the case with t&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile and Test Portieris</title>
      <link>/pi_cluster/advanced/children/2018-07-18-a/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-18-a/</guid>
      <description>&lt;p&gt;One of the biggest security risks related to Kubernetes are often linked to
the fact that it is really hard to ensure that only &amp;ldquo;approved&amp;rdquo; images are
deployed in your Kubernetes cluster. The goal here is to leverage Notary
and the a project called &amp;ldquo;Portieris&amp;rdquo; created by IBM.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rebuild Calico for AMD64 ad ARM32V7</title>
      <link>/nfv/advanced/children/2018-07-17-a/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/advanced/children/2018-07-17-a/</guid>
      <description>&lt;p&gt;Neither calico nor canal seems to be available for usage yet on ARM32V7 for PI.
The attempt here is to cross-compile the calico containers and use them on the PI cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rebuild Hyperkube images</title>
      <link>/devops/advanced/children/2018-07-16-a/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/advanced/children/2018-07-16-a/</guid>
      <description>&lt;p&gt;This post is to validate that it would be possible if urgency dictates it to rebuild the hyperkube Kubernetes image.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recompile Kubernetes components for Raspberry PI</title>
      <link>/devops/kubedgesdk/children/2018-07-15-a/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/kubedgesdk/children/2018-07-15-a/</guid>
      <description>&lt;p&gt;During the installation of official Kubernetes 1.11.0 on RPI Cluster 1,
encountered a bug on the controller manager preventing the controller-manager from starting.
The problem here was to be able to cross compiled the latest version of Kubernetes 1.11.1 before the code was officially released and of course rebuild the images.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup SingleNode Kubernetes Cluster using kubeadm</title>
      <link>/devops/kubedgesdk/children/2018-06-21-a/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/kubedgesdk/children/2018-06-21-a/</guid>
      <description>&lt;p&gt;Setup simple kubernetes cluster for test purposes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>