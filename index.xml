<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubedge on KUBEDGE&#39;s Blog</title>
    <link>/</link>
    <description>Recent content in Kubedge on KUBEDGE&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2016 16:50:16 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Archetypes</title>
      <link>/devops/hugo_githubpages/hugo/cont/archetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/cont/archetypes/</guid>
      <description>Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more : archetypes.
It is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.
Chapter To create a Chapter page, run the following commands
hugo new --kind chapter &amp;lt;name&amp;gt;/_index.</description>
    </item>
    
    <item>
      <title>Markdown syntax</title>
      <link>/devops/hugo_githubpages/hugo/cont/markdown/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/cont/markdown/</guid>
      <description>This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes&amp;hellip;)
 Let&amp;rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.
Markdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.</description>
    </item>
    
    <item>
      <title>Menu extra shortcuts</title>
      <link>/devops/hugo_githubpages/hugo/cont/menushortcuts/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/cont/menushortcuts/</guid>
      <description>You can define additional menu entries or shortcuts in the navigation menu without any link to content.
Basic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.
Example from the current website:
[[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fab fa-github&#39;&amp;gt;&amp;lt;/i&amp;gt; Github repo&amp;quot; identifier = &amp;quot;ds&amp;quot; url = &amp;quot;https://github.com/matcornic/hugo-theme-learn&amp;quot; weight = 10 [[menu.shortcuts]] name = &amp;quot;&amp;lt;i class=&#39;fas fa-camera&#39;&amp;gt;&amp;lt;/i&amp;gt; Showcases&amp;quot; url = &amp;quot;/showcase&amp;quot; weight = 11 [[menu.</description>
    </item>
    
    <item>
      <title>Icons and logos</title>
      <link>/devops/hugo_githubpages/hugo/cont/icons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/cont/icons/</guid>
      <description>The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.
Finding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.
Once on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.</description>
    </item>
    
    <item>
      <title>Upgrade RPI Kubernetes cluster to 1.12</title>
      <link>/pi_cluster/maintenance/children/2018-09-28-a/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-09-28-a/</guid>
      <description>&lt;p&gt;The new Kubernetes 1.12 is out. THe goal is to update my two clusters to 1.12
using kubeadm 1.12&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Hashicorp Vault</title>
      <link>/pi_cluster/advanced/children/2018-08-01-a/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-08-01-a/</guid>
      <description>&lt;p&gt;Vault is aiming at improving security of the containers by rotating token and credential
much more often than usual. Looks like it is especially effectiv to help rotate passwords
used to access internal databases.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Istio</title>
      <link>/pi_cluster/advanced/children/2018-07-31-a/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-31-a/</guid>
      <description>&lt;p&gt;Istio is aiming at improving security of the containers. One of the key aspects
is the end to end encryption of the commnucation, the role of citadel to ensure the
management of the certificates, the renewal of the certificates.
As always, the goal of this post is to study that new tool and figure out I can
leverage it in my day to day work.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes test-infra</title>
      <link>/pi_cluster/microservices/children/2018-07-30-a/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/microservices/children/2018-07-30-a/</guid>
      <description>&lt;p&gt;test-infra seems to somewhat overlap with sonobuoy features. The purpose of this post is
to fetch the code, compile and deploy it on a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build and Deploy Kubernetes Kustomize</title>
      <link>/pi_cluster/advanced/children/2018-07-29-a/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-29-a/</guid>
      <description>&lt;p&gt;kustomize seems to help the setup of multiple clusters by removing copy paste accross cluster
and still keeping the configuration file has plain yaml instead of the template like it
is often the case with t&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile and Test Portieris</title>
      <link>/pi_cluster/advanced/children/2018-07-18-a/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/advanced/children/2018-07-18-a/</guid>
      <description>&lt;p&gt;One of the biggest security risks related to Kubernetes are often linked to
the fact that it is really hard to ensure that only &amp;ldquo;approved&amp;rdquo; images are
deployed in your Kubernetes cluster. The goal here is to leverage Notary
and the a project called &amp;ldquo;Portieris&amp;rdquo; created by IBM.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rebuild Calico for AMD64 ad ARM32V7</title>
      <link>/nfv/fd_io_and_opnfv/children/2018-07-17-a/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/nfv/fd_io_and_opnfv/children/2018-07-17-a/</guid>
      <description>&lt;p&gt;Neither calico nor canal seems to be available for usage yet on ARM32V7 for PI.
The attempt here is to cross-compile the calico containers and use them on the PI cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rebuild Hyperkube images</title>
      <link>/devops/advanced/children/2018-07-16-a/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/advanced/children/2018-07-16-a/</guid>
      <description>&lt;p&gt;This post is to validate that it would be possible if urgency dictates it to rebuild the hyperkube Kubernetes image.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Recompile Kubernetes components for Raspberry PI</title>
      <link>/devops/kubedgesdk/children/2018-07-15-a/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/kubedgesdk/children/2018-07-15-a/</guid>
      <description>&lt;p&gt;During the installation of official Kubernetes 1.11.0 on RPI Cluster 1,
encountered a bug on the controller manager preventing the controller-manager from starting.
The problem here was to be able to cross compiled the latest version of Kubernetes 1.11.1 before the code was officially released and of course rebuild the images.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy Flannel in Raspberry PI cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-14-a/</guid>
      <description>&lt;p&gt;In order to get the nodes and pods interface with each other accross the cluster.
This post describes how I deployed Flannel acounting with the fact that some of the
nodes have multiple interfaces (wlan0 and eth0).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy Helm and Tiller on Rasberry PI Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-13-a/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-13-a/</guid>
      <description>&lt;p&gt;The main purpose of this exercise is to be able to use Helm on the Rapsberry PI Cluster.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enable docker remote API</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-12-a/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-12-a/</guid>
      <description>&lt;p&gt;In order to build image for Raspberry PI, it is sometimes usefull to be able to leverate infrastruture from a remote VM.
For instance you can cross-build golang executable for ARM32v7 and transfer it to build an image on the remote PI.
(used for Tiller docker image)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use github repo as helm chart repository</title>
      <link>/pi_cluster/maintenance/children/2018-07-11-a/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-07-11-a/</guid>
      <description>&lt;p&gt;In order to be able use Helm charts the &amp;ldquo;normal&amp;rdquo; way, it is need to buid your own helm repository.
The goal of this post is to transform a github repo into a helm repo.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Persistency Volume to PI Clusters</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-08-a/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-08-a/</guid>
      <description>&lt;p&gt;In order to install OpenHAB, HomeAssistent or even promoteheus using Kubernetes, we need to first create Persistency Volumes&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry PI cluster Assembly</title>
      <link>/pi_cluster/os_installation/children/cluster_assembly/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/os_installation/children/cluster_assembly/</guid>
      <description>&lt;p&gt;This page contains examples of harware to use in order to build a cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Ansible to manage Raspberry PI cluster</title>
      <link>/pi_cluster/os_installation/children/ansible/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/os_installation/children/ansible/</guid>
      <description>&lt;p&gt;Even if the ultimate goal is to manage completly the cluster using Kubernetes,
the ability to use Ansible during debug process is very usefull.
The goal here is to setup ansible inventory, basic playbooks.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a Raspberry 3 B&#43; Kubernetes Cluster</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-07-03-a/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-07-03-a/</guid>
      <description>&lt;p&gt;Also GCE is perfect to learn Kubernetes, building Kubernetes on top of PI Cluster brings another dimension to the learning,
from setting up the OS, partitionning the OS, DHCP, NAT, cross compiling for the ARM32V7.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile and Test SONOBUOY</title>
      <link>/pi_cluster/maintenance/children/2018-07-02-a/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/maintenance/children/2018-07-02-a/</guid>
      <description>&lt;p&gt;Sonobouy, deploys in a Kubernetes cluster and helps to assesse the compliance of that cluster&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating simple Python server container</title>
      <link>/pi_cluster/microservices/children/2018-07-01-a/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/microservices/children/2018-07-01-a/</guid>
      <description>&lt;p&gt;As we did for Go and Java, where is was possible to create an Dockerfile starting from &amp;ldquo;scratch&amp;rdquo;,
the goal of this post is to create a python base server container with a minimum about of packages
(debian and python) to reduce the security exposure of the container as well as the image size.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Update Kubernetes to 1.11 on Ubuntu</title>
      <link>/devops/advanced/children/2018-06-30-a/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/advanced/children/2018-06-30-a/</guid>
      <description>&lt;p&gt;Kubeadm is coming with an upgrade option. The goal of this study is to leverage the option.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating simple GO server container</title>
      <link>/pi_cluster/microservices/children/2018-06-29-a/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/microservices/children/2018-06-29-a/</guid>
      <description>&lt;p&gt;GO is perfectly adapted to microservices since it can
build standalone executable.&lt;/p&gt;

&lt;h2 id=&#34;key-aspects&#34;&gt;Key Aspects&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use SCRATCH has base image to keep size minimum&lt;/li&gt;
&lt;li&gt;Simple HelloWorld GO web server&lt;/li&gt;
&lt;li&gt;Create associated HELM chart for Kubernetes deployment&lt;/li&gt;
&lt;li&gt;Provide deployment for both amd64 and arm32v7&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating simple Java 10 server container</title>
      <link>/pi_cluster/microservices/children/2018-06-28-a/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/microservices/children/2018-06-28-a/</guid>
      <description>&lt;p&gt;Very often people associated Java to quite bulky and difficult to use in the microservice context,
unless you have very large image containing the JRE. But since Java 9, Java did kind of catchup with
golang on the subject. Where you can obtain a standalone executable when we running &lt;code&gt;go build&lt;/code&gt;,
java is now proposing &lt;code&gt;jlink&lt;/code&gt; which always you to acheive a very similar result. The goal
of this post is to build a container image as small as possible running Java.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zuul</title>
      <link>/devops/advanced/children/2018-06-26-a/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/advanced/children/2018-06-26-a/</guid>
      <description>&lt;p&gt;OpenStack project are using Zuul for CI/CD process. Zuul itself is based on Ansible to perform the tasks.
This post is the collection of notes and tips used during the couple of update I did to some openstack projects.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup github/gerrit behind a corporate http proxy</title>
      <link>/devops/git_gerrit/children/2018-06-25-a/</link>
      <pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/git_gerrit/children/2018-06-25-a/</guid>
      <description>&lt;p&gt;This is a post of the small set of notes taken to setup gerrit review behind corporate proxy.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker.io versus docker-ce</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-06-24-a/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-06-24-a/</guid>
      <description>&lt;p&gt;Wondering why you have a strange error such as &amp;lsquo;from &amp;hellip;&amp;rsquo; when running docker build.
The reason is linked to an older version of docker installed.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup multiple GitHub account on a single machine</title>
      <link>/devops/git_gerrit/children/2018-06-23-a/</link>
      <pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/git_gerrit/children/2018-06-23-a/</guid>
      <description>&lt;p&gt;In orderer to manage your personal GitHub projects or an your compagny projects, it is usefull to
be able to conigure your .ssh directory.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup your GOLANG environment</title>
      <link>/pi_cluster/microservices/children/2018-06-22-a/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/microservices/children/2018-06-22-a/</guid>
      <description>&lt;p&gt;A lot of the opensource projects evolvoving around Kubernetes are written in go.
It is very usefull to be able to rebuild so projects using &lt;code&gt;go get&lt;/code&gt; or &lt;code&gt;go build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup SingleNode Kubernetes Cluster using kubeadm</title>
      <link>/devops/kubedgesdk/children/2018-06-21-a/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/kubedgesdk/children/2018-06-21-a/</guid>
      <description>&lt;p&gt;Setup simple kubernetes cluster for test purposes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Create a Rapsberry PI Rescue Dongle</title>
      <link>/pi_cluster/os_installation/children/dongle/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/os_installation/children/dongle/</guid>
      <description>&lt;p&gt;I encountered multiple issues trying to repartition my SD on my PI.
Because the / directory is mounted, it never really worked safely for me
to use fdisk. Morevoer some of the powerfull tools such as gparted need
X11 installed, which I don&amp;rsquo;t have by default.&lt;/p&gt;

&lt;p&gt;Hopefully the new PI3 B and B+ are able to boot from USB, hence the idea of creating a Rescue Dongle&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Add Raspberry PI node to Kubernetes Cluster in 10 min</title>
      <link>/pi_cluster/docker_kubernetes/children/2018-06-19-a/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/pi_cluster/docker_kubernetes/children/2018-06-19-a/</guid>
      <description>&lt;p&gt;During some of the manipulation of the partition table of
my SD card, I ended up screwing up both my SD card and my backup Win32DiskImage backup.
Moreover if your SD card is 32G, it takes around 30 minute to restore from backup.
Hence the idea to come up with a way to build more resiliency in the cluster.
Recreating a node from scratch should not take more than 10 mn. The propose procedure
is still rather long because I did not push enough yet what the HypriotOS team, aka
build a default SD image where cloud-init does 100% of the initialization work.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Attachments</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/attachments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/attachments/</guid>
      <description>The Attachments shortcode displays a list of files attached to a page.
  Attachments   BachGavotteShort.mp3  (357 ko)   Carroll_AliceAuPaysDesMerveilles.pdf  (175 ko)   adivorciarsetoca00cape.pdf  (361 ko)   hugo.png  (17 ko)   movieselectricsheep-flock-244-32500-2.mp4  (340 ko)    Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages
 If your page is a markdown file, attachements must be place in a folder named like your page and ending with .</description>
    </item>
    
    <item>
      <title>Button</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/button/</guid>
      <description>A button is a just a clickable button with optional icon.
{{% button href=&amp;quot;https://getgrav.org/&amp;quot; %}}Get Grav{{% /button %}} {{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; %}}Get Grav with icon{{% /button %}} {{% button href=&amp;quot;https://getgrav.org/&amp;quot; icon=&amp;quot;fas fa-download&amp;quot; icon-position=&amp;quot;right&amp;quot; %}}Get Grav with icon right{{% /button %}}  Get Grav   Get Grav with icon  Get Grav with icon right   </description>
    </item>
    
    <item>
      <title>Expand</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/expand/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/expand/</guid>
      <description>The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example
  Expand me...   Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</description>
    </item>
    
    <item>
      <title>Mermaid</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/mermaid/</guid>
      <description>Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.
Just insert your mermaid code in the mermaid shortcode and that&amp;rsquo;s it.
Flowchart example {{&amp;lt;mermaid align=&amp;quot;left&amp;quot;&amp;gt;}} graph LR; A[Hard edge] --&amp;gt;|Link text| B(Round edge) B --&amp;gt; C{Decision} C --&amp;gt;|One| D[Result one] C --&amp;gt;|Two| E[Result two] {{&amp;lt; /mermaid &amp;gt;}}  renders as
graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two]  Sequence example {{&amp;lt;mermaid&amp;gt;}} sequenceDiagram participant Alice participant Bob Alice-&amp;gt;&amp;gt;John: Hello John, how are you?</description>
    </item>
    
    <item>
      <title>Notice</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/notice/</guid>
      <description>The notice shortcode shows 4 types of disclaimers to help you structure your page.
Note {{% notice note %}} A notice disclaimer {{% /notice %}}  renders as
A notice disclaimer
 Info {{% notice info %}} An information disclaimer {{% /notice %}}  renders as
An information disclaimer
 Tip {{% notice tip %}} A tip disclaimer {{% /notice %}}  renders as
A tip disclaimer
 Warning {{% notice warning %}} An warning disclaimer {{% /notice %}}  renders as</description>
    </item>
    
    <item>
      <title>Site param</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/siteparam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/siteparam/</guid>
      <description>siteparam shortcode is used to help you print values of site params.
For instance, in this current site, the editURL variable is used in config.toml
[params] editURL = &amp;quot;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/&amp;quot;  Use the siteparam shortcode to display its value.
`editURL` Value : {{% siteparam &amp;quot;editURL&amp;quot; %}}  is displayed as
editURL Value : </description>
    </item>
    
    <item>
      <title>page test</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/children/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/children/test/</guid>
      <description>This is a test demo child page</description>
    </item>
    
    <item>
      <title>page test 3</title>
      <link>/devops/hugo_githubpages/hugo/shortcodes/children/children-2/test3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/devops/hugo_githubpages/hugo/shortcodes/children/children-2/test3/</guid>
      <description>This is a test 3 demo child page</description>
    </item>
    
  </channel>
</rss>