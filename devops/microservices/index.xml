<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MicroServices on KUBEDGE&#39;s Blog</title>
    <link>/devops/microservices/</link>
    <description>Recent content in MicroServices on KUBEDGE&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/devops/microservices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python</title>
      <link>/devops/microservices/children/2018-07-01-a/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/microservices/children/2018-07-01-a/</guid>
      <description>&lt;p&gt;As we did for Go and Java, where is was possible to create an Dockerfile starting from &amp;ldquo;scratch&amp;rdquo;,
the goal of this post is to create a python base server container with a minimum about of packages
(debian and python) to reduce the security exposure of the container as well as the image size.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating simple GO server container</title>
      <link>/devops/microservices/children/2018-06-29-a/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/microservices/children/2018-06-29-a/</guid>
      <description>&lt;p&gt;GO is perfectly adapted to microservices since it can
build standalone executable.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating simple Java 10 server container</title>
      <link>/devops/microservices/children/2018-06-28-a/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/microservices/children/2018-06-28-a/</guid>
      <description>&lt;p&gt;Very often people associated Java to quite bulky and difficult to use in the microservice context,
unless you have very large image containing the JRE. But since Java 9, Java did kind of catchup with
golang on the subject. Where you can obtain a standalone executable when we running &lt;code&gt;go build&lt;/code&gt;,
java is now proposing &lt;code&gt;jlink&lt;/code&gt; which always you to acheive a very similar result. The goal
of this post is to build a container image as small as possible running Java.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup your GOLANG environment</title>
      <link>/devops/microservices/children/2018-06-22-a/</link>
      <pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/devops/microservices/children/2018-06-22-a/</guid>
      <description>&lt;p&gt;A lot of the opensource projects evolvoving around Kubernetes are written in go.
It is very usefull to be able to rebuild so projects using &lt;code&gt;go get&lt;/code&gt; or &lt;code&gt;go build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>